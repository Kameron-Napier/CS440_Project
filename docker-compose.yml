version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports: ["80:3000"]
    environment:
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - user-auth
      - event-scheduling
      - event-details

  user-auth:
    env_file:
      - ./user-auth/.env
    build: ./user-auth
    environment:
      DB_HOST: auth-db
      DB_USER: auth_user
      DB_PASS: auth_pass
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - auth-db

  event-scheduling:
    env_file:
      - ./event-scheduling/.env
    build: ./event-scheduling
    environment:
      DB_HOST: scheduling-db
      DB_USER: scheduling_user
      DB_PASS: scheduling_pass
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - scheduling-db

  event-details:
    env_file:
      - ./event-details/.env
    build: ./event-details
    environment:
      DB_HOST: details-db
      DB_USER: details_user
      DB_PASS: details_pass
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - details-db

  # Databases (same as previous answer)
  auth-db: # ...
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_pass
    volumes:
      - auth_data:/var/lib/mysql
  scheduling-db: # ...
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: scheduling_db
      MYSQL_USER: scheduling_user
      MYSQL_PASSWORD: scheduling_pass
    volumes:
      - scheduling_data:/var/lib/mysql
  details-db: # ...
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: details_db
      MYSQL_USER: details_user
      MYSQL_PASSWORD: details_pass
    volumes:
      - details_data:/var/lib/mysql

volumes: # ...
  auth_data:
  scheduling_data:
  details_data: